<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="bi bi-file-earmark-text"></i> عروض الأسعار</h2>
                <a href="/costs" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-right me-1"></i> العودة للتكاليف
                </a>
            </div>

            <!-- نموذج إنشاء عرض سعر جديد -->
            <div class="card shadow mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-plus-circle"></i> إنشاء عرض سعر جديد</h5>
                </div>
                <div class="card-body">
                    <form id="quotationForm" method="POST" action="/costs/quotations">
                        <!-- بيانات العميل -->
                        <div class="row g-3 mb-4">
                            <div class="col-md-6">
                                <label class="form-label">اسم العميل *</label>
                                <input type="text" class="form-control" name="client_name" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">رقم الهاتف</label>
                                <input type="text" class="form-control" name="client_phone">
                            </div>
                            <div class="col-md-12">
                                <label class="form-label">العنوان</label>
                                <textarea class="form-control" name="client_address" rows="2"></textarea>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">نسبة الربح العامة (%)</label>
                                <input type="number" class="form-control" name="general_profit_percentage" step="0.01" value="0">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">ملاحظات</label>
                                <textarea class="form-control" name="notes" rows="2"></textarea>
                            </div>
                        </div>

                        <!-- اختيار المواد -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0">اختيار المواد</h6>
                                <button type="button" class="btn btn-outline-primary btn-sm" onclick="addMaterialRow()">
                                    <i class="bi bi-plus"></i> إضافة مادة
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered" id="materialsTable">
                                    <thead>
                                        <tr>
                                            <th>المادة</th>
                                            <th>كلفة القطعة</th>
                                            <th>نسبة الربح (%)</th>
                                            <th>السعر النهائي</th>
                                            <th>الكمية</th>
                                            <th>المجموع</th>
                                            <th>الإجراءات</th>
                                        </tr>
                                    </thead>
                                    <tbody id="materialsTableBody">
                                        <!-- سيتم إضافة الصفوف ديناميكياً -->
                                    </tbody>
                                    <tfoot>
                                        <tr class="table-info">
                                            <td colspan="5" class="text-end"><strong>المجموع الإجمالي:</strong></td>
                                            <td><strong id="totalAmount">0.00 <%= defaultCurrency ? defaultCurrency.symbol : '$' %></strong></td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>

                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save me-1"></i> حفظ عرض السعر
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- جدول عروض الأسعار الموجودة -->
            <% if (quotations && quotations.length > 0) { %>
            <div class="card shadow">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-list-ul"></i> عروض الأسعار المسجلة</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>رقم العرض</th>
                                    <th>اسم العميل</th>
                                    <th>عدد المواد</th>
                                    <th>المبلغ الإجمالي</th>
                                    <th>نسبة الربح</th>
                                    <th>التاريخ</th>
                                    <th>الإجراءات</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% quotations.forEach(quotation => { %>
                                <tr>
                                    <td><%= quotation.quotation_number %></td>
                                    <td><%= quotation.client_name %></td>
                                    <td><%= quotation.items_count %></td>
                                    <td><%= parseFloat(quotation.total_amount).toFixed(2) %> <%= defaultCurrency ? defaultCurrency.symbol : '$' %></td>
                                    <td><%= parseFloat(quotation.general_profit_percentage).toFixed(1) %>%</td>
                                    <td><%= formatDate(quotation.created_at) %></td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="/costs/quotations/<%= quotation.id %>" class="btn btn-sm btn-info">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="deleteQuotation(<%= quotation.id %>)">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <% } %>
        </div>
    </div>
</div>

<script>
// المواد المتاحة
const materials = <%- JSON.stringify(materials || []) %>;
let materialRows = [];

// إضافة صف مادة جديد
function addMaterialRow() {
    const tbody = document.getElementById('materialsTableBody');
    const rowIndex = materialRows.length;
    
    const row = document.createElement('tr');
    row.innerHTML = `
        <td>
            <select class="form-select material-select" onchange="updateMaterialData(${rowIndex}, this.value)">
                <option value="">اختر المادة</option>
                                 ${materials.map(m => `<option value="${m.id}" data-unit-cost="${parseFloat(m.unit_cost).toFixed(2)}">${m.material_name}</option>`).join('')}
            </select>
        </td>
        <td>
            <input type="number" class="form-control unit-cost" readonly>
        </td>
        <td>
            <input type="number" class="form-control profit-percentage" step="0.01" value="0" onchange="calculateRowTotal(${rowIndex})">
        </td>
        <td>
            <input type="number" class="form-control final-price" readonly>
        </td>
        <td>
            <input type="number" class="form-control quantity" value="1" min="1" onchange="calculateRowTotal(${rowIndex})">
        </td>
        <td>
            <input type="number" class="form-control row-total" readonly>
        </td>
        <td>
            <button type="button" class="btn btn-sm btn-danger" onclick="removeMaterialRow(${rowIndex})">
                <i class="bi bi-trash"></i>
            </button>
        </td>
    `;
    
    tbody.appendChild(row);
    materialRows.push({
        materialId: '',
        materialName: '',
        unitCost: 0,
        profitPercentage: 0,
        finalPrice: 0,
        quantity: 1,
        totalPrice: 0
    });
}

// تحديث بيانات المادة
function updateMaterialData(rowIndex, materialId) {
    const material = materials.find(m => m.id == materialId);
    if (!material) return;
    
    const row = materialRows[rowIndex];
    row.materialId = material.id;
    row.materialName = material.material_name;
    row.unitCost = parseFloat(material.unit_cost);
    
    const tr = document.querySelector(`#materialsTableBody tr:nth-child(${rowIndex + 1})`);
    tr.querySelector('.unit-cost').value = parseFloat(material.unit_cost).toFixed(2);
    
    calculateRowTotal(rowIndex);
}

// حساب مجموع الصف
function calculateRowTotal(rowIndex) {
    const row = materialRows[rowIndex];
    const tr = document.querySelector(`#materialsTableBody tr:nth-child(${rowIndex + 1})`);
    
    const profitPercentage = parseFloat(tr.querySelector('.profit-percentage').value) || 0;
    const quantity = parseInt(tr.querySelector('.quantity').value) || 1;
    
    row.profitPercentage = profitPercentage;
    row.quantity = quantity;
    
    const finalPrice = row.unitCost * (1 + profitPercentage / 100);
    const totalPrice = finalPrice * quantity;
    
    row.finalPrice = finalPrice;
    row.totalPrice = totalPrice;
    
    tr.querySelector('.final-price').value = finalPrice.toFixed(2);
    tr.querySelector('.row-total').value = totalPrice.toFixed(2);
    
    calculateTotalAmount();
}

// حساب المجموع الإجمالي
function calculateTotalAmount() {
    const total = materialRows.reduce((sum, row) => sum + row.totalPrice, 0);
            document.getElementById('totalAmount').textContent = total.toFixed(2) + ' <%= defaultCurrency ? defaultCurrency.symbol : "$" %>';
}

// حذف صف مادة
function removeMaterialRow(rowIndex) {
    materialRows.splice(rowIndex, 1);
    document.querySelector(`#materialsTableBody tr:nth-child(${rowIndex + 1})`).remove();
    calculateTotalAmount();
}

// إرسال النموذج
document.getElementById('quotationForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const items = [];
    
    // إضافة المواد المختارة إلى النموذج
    materialRows.forEach((row, index) => {
        if (row.materialId) {
            items.push({
                material_id: row.materialId,
                material_name: row.materialName,
                unit_cost: row.unitCost,
                profit_percentage: row.profitPercentage,
                quantity: row.quantity
            });
        }
    });
    
    fetch('/costs/quotations', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            client_name: formData.get('client_name'),
            client_phone: formData.get('client_phone'),
            client_address: formData.get('client_address'),
            notes: formData.get('notes'),
            general_profit_percentage: formData.get('general_profit_percentage'),
            items: items
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showAlert('تم إنشاء عرض السعر بنجاح', 'success');
            this.reset();
            materialRows = [];
            document.getElementById('materialsTableBody').innerHTML = '';
            addMaterialRow();
            setTimeout(() => window.location.reload(), 1500);
        } else {
            showAlert(data.message || 'حدث خطأ في إنشاء عرض السعر', 'error');
        }
    })
    .catch(error => {
        showAlert('حدث خطأ في إنشاء عرض السعر', 'error');
    });
});

// حذف عرض سعر
function deleteQuotation(id) {
    if (confirm('هل أنت متأكد من حذف هذا العرض؟')) {
        fetch(`/costs/quotations/${id}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert('تم حذف عرض السعر بنجاح', 'success');
                setTimeout(() => window.location.reload(), 1500);
            } else {
                showAlert(data.message || 'حدث خطأ في حذف عرض السعر', 'error');
            }
        })
        .catch(error => {
            showAlert('حدث خطأ في حذف عرض السعر', 'error');
        });
    }
}

// دالة عرض التنبيهات
function showAlert(message, type) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.querySelector('.container').insertBefore(alertDiv, document.querySelector('.container').firstChild);
    
    // إزالة التنبيه تلقائياً بعد 5 ثوان
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}

// إضافة صف أول عند تحميل الصفحة
document.addEventListener('DOMContentLoaded', function() {
    addMaterialRow();
});
</script> 